unit uDTMEntrada;

interface

uses
  System.SysUtils, System.Classes, Data.DB, Datasnap.DBClient, uDTMConexao,
  ZAbstractConnection, ZConnection, ZAbstractRODataset, ZAbstractDataset,
  ZDataset;

type
  TdtmEntrada = class(TDataModule)
    cdsGridEntradaProdutoVirtual: TClientDataSet;
    dtsGridEntradaProdutoVirtual: TDataSource;
    cdsGridEntradaProdutoVirtualprodutoId: TIntegerField;
    cdsGridEntradaProdutoVirtualnome: TStringField;
    cdsGridEntradaProdutoVirtualquantidade: TFloatField;
    procedure DataModuleCreate(Sender: TObject);
    procedure DataModuleDestroy(Sender: TObject);
  private
    { Private declarations }
  public
    function GetNextEntradaId: Integer;
    { Public declarations }
  end;

var

dtmEntrada: TdtmEntrada;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

procedure TdtmEntrada.DataModuleCreate(Sender: TObject);
begin
    cdsGridEntradaProdutoVirtual.CreateDataSet;
end;

procedure TdtmEntrada.DataModuleDestroy(Sender: TObject);
begin
   cdsGridEntradaProdutoVirtual.Close;
end;

function TdtmEntrada.GetNextEntradaId: Integer;
var
  Qry: TZQuery;
begin
  Result := -1; // Valor padrão caso ocorra algum erro

  Qry := TZQuery.Create(nil);
  try
    Qry.Connection := dtmPrincipal.ConexaoDB;
    Qry.SQL.Text := 'SELECT COALESCE(MAX(entradaId), 0) + 1 AS NextId FROM entradanota';
    Qry.Open;
    if not Qry.IsEmpty then
      Result := Qry.FieldByName('NextId').AsInteger;
  finally
    Qry.Free;
  end;
end;

end.
